package com.example.demo.service;

import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.dao.LibDAO;
import com.example.demo.model.Users;

@Service
public class LibService {

	@Autowired
	LibDAO dao;
	
	public ArrayList<Users> getMessage() {
		return dao.displayUser();
	}

	public void addUser(Users user) {
		// TODO Auto-generated method stub
		dao.addUser(user);
	}
}
*******************************

package com.example.demo.model;

public class Users {
	@Override
	public String toString() {
		return "Users [userName=" + userName + ", userId=" + userId + "]";
	}

	private String userName;
	private int userId;

	public int getUserId() {
		return userId;
	}

	public void setUserId(int i) {
		this.userId = i;
	}

	public String getUserName() {
		return userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}
}

********************************
package com.example.demo.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import org.springframework.stereotype.Repository;

import com.example.demo.model.Users;

@Repository
public class LibDAO {

	public static Connection connectToDB() {
		Connection connection = null;
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
		} catch (ClassNotFoundException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		try {
			connection = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "system", "admin");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return connection;

	}
	public  ArrayList<Users> displayUser() {
		ArrayList<Users> userList = new ArrayList<Users>();
		try {
			Connection con = connectToDB();
			PreparedStatement stmt = con.prepareStatement("select * from users");

			// Step 4: Execute SQL Query
			ResultSet rs = stmt.executeQuery();
			while (rs.next()) {
				Users user = new Users();

				user.setUserName(rs.getString(1));
				
				userList.add(user);
			}
			// Step 5:Close Connection
			con.close();

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return userList;

	}
	
	
	public void addUser(Users user) {
		// Step 3: Create statement
		try {

			// Statement stmt = connectToDB().createStatement();

			Connection con=connectToDB();
			
			PreparedStatement stmt = con.prepareStatement("insert into users values(?,?)");

			stmt.setInt(1, user.getUserId() );

			stmt.setString(2, user.getUserName());

			
			// Step 4: Execute SQL Query

			int affectedRows = stmt.executeUpdate();

			System.out.println("Affected rows: " + affectedRows);
			//Step 5:Close Connection
			con.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
}
}
**********************************
package com.example.demo.controller;

import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.example.demo.model.Users;
import com.example.demo.service.LibService;

@Controller
@ResponseBody
public class LibController {

	@Autowired
	LibService service;
	
	@RequestMapping("/")
	public ArrayList<Users> getMessage() {
		return service.getMessage();
	}
	
	@RequestMapping("/msg")
	public String getMessgae(@RequestParam(name="userName")String userName, @RequestParam(name="pswd") String pswd)
	{
		System.out.println(userName+"\t"+pswd);
		return "Hello";
		
	}
	
	@PostMapping("/adduser")
	public void addUser(@RequestBody Users user)
	{		
	   service.addUser(user);
		
	}
	
	
	
}


/*("userId") int userId,@RequestBody("userName") String userName

Users user=new Users();
user.setUserId(userId);
user.setUserName(userName);
*/
****************
package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class NewLibraryApplication {

	public static void main(String[] args) {
		SpringApplication.run(NewLibraryApplication.class, args);
	}

}
